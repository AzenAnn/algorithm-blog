import{_ as n,c as e,b as s,o as r}from"./app-DMkCwowN.js";const t={};function i(l,a){return r(),e("div",null,a[0]||(a[0]=[s('<h1 id="🌳-树论" tabindex="-1"><a class="header-anchor" href="#🌳-树论"><span>🌳 树论</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>树是一种重要的非线性数据结构，在计算机科学中应用广泛。从文件系统到数据库索引，从编译器到人工智能，树结构无处不在。</p><h2 id="🎯-学习目标" tabindex="-1"><a class="header-anchor" href="#🎯-学习目标"><span>🎯 学习目标</span></a></h2><ul><li>理解树的基本概念和性质</li><li>掌握二叉树的各种操作</li><li>学会平衡树的原理和应用</li><li>熟练运用树形算法解决问题</li></ul><h2 id="📚-主要内容" tabindex="-1"><a class="header-anchor" href="#📚-主要内容"><span>📚 主要内容</span></a></h2><h3 id="🌱-树的基础" tabindex="-1"><a class="header-anchor" href="#🌱-树的基础"><span>🌱 树的基础</span></a></h3><ul><li><strong>基本概念</strong> - 根、叶子、高度、深度</li><li><strong>二叉树</strong> - 满二叉树、完全二叉树</li><li><strong>树的遍历</strong> - 前序、中序、后序、层序</li><li><strong>树的表示</strong> - 链式存储、数组存储</li></ul><h3 id="🔄-高级树结构" tabindex="-1"><a class="header-anchor" href="#🔄-高级树结构"><span>🔄 高级树结构</span></a></h3><ul><li><strong>二叉搜索树</strong> - 查找、插入、删除</li><li><strong>平衡树</strong> - AVL树、红黑树</li><li><strong>堆</strong> - 最大堆、最小堆、堆排序</li><li><strong>特殊树</strong> - 字典树、线段树、树状数组</li></ul><h2 id="🚧-建设进度" tabindex="-1"><a class="header-anchor" href="#🚧-建设进度"><span>🚧 建设进度</span></a></h2><p>正在建设中... 🛠️</p><hr><p><em>最后更新时间：2024年</em></p>',14)]))}const o=n(t,[["render",i]]),d=JSON.parse('{"path":"/tree-theory/","title":"🌳 树论","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1753096099000,"contributors":[{"name":"AzenAnn","username":"AzenAnn","email":"annan2@mail2.sysu.edu.cn","commits":1,"url":"https://github.com/AzenAnn"}],"changelog":[{"hash":"2d66fcefd0ab38170527c954f0efd63b12d36117","time":1753096099000,"email":"annan2@mail2.sysu.edu.cn","author":"AzenAnn","message":"第一次博客提交"}]},"filePathRelative":"tree-theory/README.md"}');export{o as comp,d as data};
